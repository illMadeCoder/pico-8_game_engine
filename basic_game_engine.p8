pico-8 cartridge // http://www.pico-8.com
version 8
__lua__
framerate = 60
--[[
btn (i (p))
  get button i state for player p (default 0)
  i: 0..5: left right up down button_o button_x
  p: player index 0..7

  If no parameters supplied, returns a bitfield of all 12 button states for player 0 & 1
    // P0: bits 0..5  P1: bits 8..13

  Default keyboard mappings to player buttons:
    player 0: cursors, Z,X / C,V / N,M
    player 1: ESDF, LSHIFT,A / TAB,Q,E


Colours indexes:
  	
  	 0  black   1  dark_blue   2  dark_purple   3  dark_green  
  	 4  brown   5  dark_gray   6  light_gray    7  white
  	 8  red     9  orange     10  yellow       11  green       
  	12  blue   13  indigo     14  pink         15  peach
]]--
--helpers
function empty()
end
function ceil(_x)
  return flr(_x+1)
end
function sign(_x)
  return _x > 0 and 1 or _x < 0 and -1 or 0
end
function round(_x)
  if _x % 1 == 0 then
    return _x
  elseif _x % 1 >= .5 then
    return sign(_x) == 1 and ceil(_x) or flr(_x)
  else
    return sign(_x) == 1 and flr(_x) or ceil(_x) 
  end
end
function bool_to_str(_bool)
  return _bool and "true" or "false"
end
function stringify_table(_table,_tab)
  local function num_to_tab(_num) 
    local ret = ""
    for i=1,_num do
      ret = ret .. "    "
    end
    return ret
  end
  _table = _table or {}
  _tab = _tab or 0
  local ret = "\n" .. num_to_tab(_tab) .. "{\n"
  for k,v in pairs(_table) do
    if type(v) == "function" then
      ret = ret .. num_to_tab(_tab) .. k .. "=" .. k .. "()" .. '\n'
    elseif type(v) == "table" then
      ret = ret .. num_to_tab(_tab) .. k .. "=" .. stringify_table(v,_tab+1) .. '\n'
    elseif type(v) == "boolean" then
      ret = ret .. num_to_tab(_tab) .. k .. "=" .. bool_to_str(v) .. '\n'
    else
      ret = ret .. num_to_tab(_tab) .. k .. "=" .. v .. '\n'
    end
  end
  return ret .. num_to_tab(_tab) .. "}\n"
end
function split(_string,_split)
  --on empty strings return empty object
  if _string == "" or not _string then 
    return {} 
  end
  local ret = {}
  local cur = ""
  for i=1,#_string do
    local char = sub(_string,i,i)
    if char == _split then
      add(ret,cur)
      cur = ""
    else
      cur = cur .. char
    end
  end
  add(ret,cur)
  return ret
end
function print_center(str,x,y,col)
  print(str,x+((4-#str*4)/2),y,col)
end
function exists(obj,search)
  for v in all(obj) do
    if v == search then
      return true
    end
  end
  return false
end
function in_range(_x,_a,_b)
  return _x >= _a and _x <= _b
end
function clamp(_x,_a,_b)
  return _x <= _a and _a or _x >= _b and _b or _x
end
function norm(_x,_min,_max) 
  return (_x-_min)/(_max-_min)
end
function lerp(_min,_max,_percent)
  return clamp((_max-_min)*_percent+_min,_min,_max)
end
function interval_intersect(_x1,_x2,_y1,_y2)
  return max(_x1,_y1) <= min(_x2,_y2)
end
function rect_intersect(_x1,_y1,_width1,_height1,_x2,_y2,_width2,_height2)
  return interval_intersect(_x1.x,_x1.x+_x1.width,_x2.x,_x2.x+_x2.width) and
  interval_intersect(_x1.y,_x1.y+_x1.height,_x2.y,_x2.y+_x2.height)
end
function set_to(_tableA,_tableB)
  --TEST
  for k,v in pairs(_tableA) do
    if type(_tableB[k]) != "table" then
      _tableA[k] = _tableB[k]
    else
      set_to(_tableA[k],_tableB[k])
    end
  end
end
--types
--rect
function new_rect(_x,_y,_width,_height)
  return {x=_x,y=_y,width=_width,height=_height}
end
--tween
--2D Vector
Vector = {}
Vector.metatable = {}
function new_vector(_x,_y)
  local ret = {x=_x or 0,y=_y or 0}
  setmetatable(ret,Vector.metatable)
  return ret
end
Vector.metatable.__index = function(_table,_key)
  return Vector.metatable[_key]
end
Vector.metatable.__add = function(_a,_b)
  return new_vector(_a.x+_b.x,_a.y+_b.y)
end
Vector.metatable.__sub = function(_a,_b)
  return new_vector(_a.x-_b.x,_a.y-_b.y)
end
Vector.metatable.Set = function(_self,_x,_y)
  _self.x,_self.y = _x or 0, _y or 0
end
Vector.metatable.SetTo = function(_self,_other)
  _self:Set(_other.x,_other.y)
end
Vector.metatable.ToWhole = function(_self)
  _self:Set(round(_self.x),round(_self.y))
end
Vector.metatable.Lerp = function(_self,_start,_end,_t)
  --Linear interporlate between two points by some fraction _t, 0==_start,.5==vector between _start,_end,1==_end
  _self:Set(lerp(_start.x,_end.x,_t),lerp(_start.y,_end.y,_t))  
end
Vector.metatable.MoveTowards = function(_self,_to,_speed)
  --Moves a vector _self in the direction towards _to, _speed pixels
  _speed = _speed or 1
  if Vector.approxEqual(_self,_to,_speed) then
    _self:SetTo(_to)
  else
    _self:SetTo(_self + Vector.scalarMult(Vector.unit_towards(_self,_to),_speed))
  end
end
Vector.Coroutines = {}
Vector.Coroutines.MoveToInFrames = function(_self,_end,_framesToReachTarget)
  --Linear interporlate between two points givin some count of frames
  local start,tick = new_vector(_self.x,_self.y),0

  local function coroutine ()
    while tick/_framesToReachTarget <= 1 do
      tick += 1
      _self:Lerp(start,_end,tick/_framesToReachTarget)
      yield()
    end
  end
  
  return cocreate(coroutine)
end
Vector.metatable.CircularMotion = function(start_vec,center,speed)
  --[[
  CircularMotion takes a starting vectorg a center and a speed, 
  given the start vector and center, find a vector dif from center to start_vec,
  use the magnitude of dif to find the circle radius, use the angle between the components of dif to find the start location on the circle,
  set the step to the appropriate starting location
  ]]--
  local dif = center - start_vec
  local radius = Vector.magnitude(dif) 
  local step = atan2(dif.x,dif.y)*framerate/speed
  
  local update = function (_displace,_speed)
    if _displace then
      center += _displace
    end
    if _speed then
      speed += _speed
    end
    local ret = Vector.ToWhole(new_vector(-cos((step/framerate)*speed)*radius,-sin((step/framerate)*speed)*radius) + center)
    step += 1
    return ret
  end
  return {update=update}
end

Vector.scalarMult = function(_vec,_scalar)
  return new_vector(_vec.x*_scalar,_vec.y*_scalar)
end
Vector.normalize = function(_vec)
  return new_vector(_vec.x/Vector.magnitude(_vec),_vec.y/Vector.magnitude(_vec))
end
Vector.dot = function(_a,_b)
  return _a.x*_b.x+_a.y*_b.y
end
Vector.inv = function(_a)
  return Vector.scalarMult(_a,-1)
end
Vector.magnitude = function(_vec)
  return sqrt(_vec.x*_vec.x + _vec.y*_vec.y)
end
Vector.unit_towards = function(_from,_to)
  return Vector.normalize(_to-_from)
end
Vector.scale = function(_vecA,_vecB)
  return new_vector(_vecA.x*_vecB.x,_vecA.y*_vecB.y)
end
Vector.distance = function(_vecA,_vecB)
  return Vector.magnitude(_vecA-_vecB)
end
Vector.approxEqual = function (_a,_b,_thresh)
  _thresh = _thresh or 1
  local dif = _a-_b
  return in_range(dif.x,-_thresh,_thresh) and in_range(dif.y,-_thresh,_thresh)
end
Up = new_vector(0,-1)
Down = new_vector(0,1)
Left = new_vector(-1,0)
Right = new_vector(1,0)

--Sprite
Sprite = {}
Sprite.metatable = {}
Sprite.metatable.draw = function (_sprite,_entity)
  spr(_sprite.n,_entity.position.x+_sprite.x,_entity.position.y+_sprite.y,_sprite.width,_sprite.height,_sprite.flipx,_sprite.flipy)
end
Sprite.metatable.__index = function (_table,_key)
  return Sprite.metatable[_key]
end
function new_sprite(n,x,y,width,height,flipx,flipy)
  local ret = {n=n or 0,x=x or 0, y = y or 0, width = width or 0, height = height or 0, flipx = flipx or false, flipy = flipy or false}
  setmetatable(ret,Sprite.metatable)
  return ret
end

--hitbox/body
function new_hitbox(_x,_y,_width,_height,_name,_immaterial)
  return {
    x=_x or 0,
    y=_y or 0,
    width=_width or 0,
    height=_height or 0,
    name=_name or "",
    immaterial=_immaterial or false,
    collisions={}
  }
end
Body = {}
Body.metatable = {}
function new_body(_hitboxes,_collision)
  local ret = {hitboxes=_hitboxes or {},collision=_collision or empty}
  setmetatable(ret,Body.metatable)
  return ret
end
Body.metatable.draw = function(_self,_entity)
  for hitbox in all(_self.hitboxes) do
    rect(_entity.position.x+hitbox.x,_entity.position.y+hitbox.y,_entity.position.x+hitbox.x+hitbox.width,_entity.position.y+hitbox.y+hitbox.height,11)
  end  
end
Body.metatable.get_collisions = function(_self)
  local ret = {}
  for hitbox in all(_self.hitboxes) do
    if #hitbox.collision > 0 then
      add(ret,hitbox)
    end
  end
  return ret
end
Body.metatable.clear_collisions = function(_self)
  for hitbox in all(_self.hitboxes) do
    hitbox.collisions = {}
  end
end
Body.metatable.locate_hitbox = function(_self,_name)
  local ret = {}
  for hitbox in all(_self.hitboxes) do
    if hitbox.name == _name then
      add(ret,hitbox)
    end
  end
  return ret
end
Body.metatable.__index = function(_table,_key)
  return Body.metatable[_key]
end
--animation
function parse_sprite_frames(_comp_sprite_frames)
  --sprite frame format "n,x,y,w,h,flipx,flipy|...|n,x,y,w,h,flipx,flipy" all numbers
  local sprite_frames = {}
  local comp_sprites = split(_comp_sprite_frames,"|")
  for i=1,#comp_sprites do
    local sprite = split(comp_sprites[i],",")
    add(sprite_frames,new_sprite(sprite[1],sprite[2],sprite[3],sprite[4],sprite[5],sprite[6],sprite[7]))
  end
  return sprite_frames
end
function parse_hitbox_frames(_comp_hitbox_frames)
  --hitbox frame format "x,y,w,h,name|..|x,y,w,h,name" all numbers
  local hitbox_frames = {}
  local comp_hitboxes = split(_comp_hitbox_frames,"|")
  for i=1,#comp_hitboxes do
    local hitbox = split(comp_hitboxes[i],",")
    add(hitbox_frames,new_hitbox(hitbox[1],hitbox[2],hitbox[3],hitbox[4],hitbox[5]))
  end
  return hitbox_frames
end
function parse_displacement_frames(_comp_displacement_frames)
  --format "x,y|..|x,y"
  local displacement_frames = {}
  local comp_displacements = split(_comp_displacement_frames,"|")
  for i=1,#comp_displacements do
    printh(stringify_table(comp_displacements))
    local displacement = split(comp_displacements[i],",")
    add(displacement_frames,new_vector(displacement[1],displacement[2]))
  end
  return displacement_frames
end
function new_frame(_sprite,_hitbox,_displacement)
  return {sprite=_sprite,hitbox=_hitbox,displacement=_displacement}
end
function parse_compressed_frame(_compressed_string)
  --format: "compressed_sprite_frames/compressed_hitbox_frames/compressed_displacement_frames"
  local compressed_frames = split(_compressed_string,"/")
  return {parse_sprite_frames(compressed_frames[1]),parse_hitbox_frames(compressed_frames[2]),parse_displacement_frames(compressed_frames[3])}
end
function new_clip(_compressed_frames,_sample_rate)
  --[[
  --clip consists of frames, who are built via parse_compressed_frame 
  --and contain compressed_sprite frames, compressed_hitbox frames, and compressed displacement frames
  --a frame then contains the raw sprite,hitbox,and displacement which will be sampled
  ]]--
  local parsed_frames = parse_compressed_frame(_compressed_frames)
  local frames,
  sprite_frames,
  hitbox_frames,
  displacement_frames = 
  {},
  parsed_frames[1],
  parsed_frames[2],
  parsed_frames[3]
  
  local length = max(max(#sprite_frames,#hitbox_frames),#displacement_frames)
  for i=1,length do
    add(frames,new_frame(sprite_frames[i],hitbox_frames[i],displacement_frames[i]))
  end
  return {frames=frames,sample_rate=_sample_rate,length=length}
end
function new_animation(_clip,_sprite,_hitbox,_position)
  local frame = 0
  local sample = 1
  
  local anim = function (_loop)
    while sample <= _clip.length do
      if sample % 1 == 0 then
        if _clip.frames[sample].sprite and _sprite then
          set_to(_sprite,_clip.frames[sample].sprite)
        end
        if _clip.frames[sample].hitbox and _hitbox then
          set_to(_hitbox,_clip.frames[sample].hitbox)
        end
        if _clip.frames[sample].displacement and _position then
          position += _clip.frames[sample].displacement
        end
      end
      frame += 1
      sample = frame/_clip.sample_rate
      if sample >= _clip.length and _loop then
        frame = 0
      end
      yield()
    end
  end
  
  return cocreate(anim)
end
--entity
function new_entity(_name,_tag,_position,_update,_draw,_body,_model,_z)
  --[[an entity is a data structure meant to be used by the game to create some effect
  --an entity is defined by the following:
  --name is a string to identify the object in memory
  --vector is an object of the new_vector function to provide a spatial vector to the object
  --update is a function to be called each frame
  --draw is a function to be called each render
  --model is a table container for an entity's state
  --z is the z index to be drawn
  
  --if you want a 'start' function, a function to be called on the first frame of the entity's existense,
  --do a if (entity.frame == 0) check
  --]]
  return {
          name=_name or "NoName",
          tag=_tag or {},
          position=_position or x2ition(),
          update=_update or empty,
          draw=_draw or empty,
          body=_body or new_body(),
          model=_model or {},
          z=_z or 0,
          frame=0
        }
end
function new_scene(_starting,_ending,_update,_draw,_late_update,_model)
--[[
--A scene is a manager for any particular segments of a game and should be used as a tool
--to control game state. Each game runs an initial scene, and then from there a scene may
--transition via game.switch_scene(scene) where first the ending function of a scene will be called
--followed then by the new scene's starting() function.
--game.active_scene is the current running scene
]]--
  return {
        starting=_starting or empty,
        ending=_ending or empty,
        update=_update or empty,
        draw=_draw  or empty,
        late_update=_late_update or empty,
        model=_model or {},
        frame=0
      }
end
--game
function new_game(_starting_scene)
    --Sorry this looks bad, token saver.
    local 
    active_scene, --_starting_scene
    entities, --{}
    game_camera, --{x=0,y=0,width=128,height=128}
    settings, --{show_hitboxes=true,entities_active=true}
    frame, --0
    started =  --false
    _starting_scene,
    {},
    {x=0,y=0,width=128,height=128},
    {show_hitboxes=true,entities_active=true},
    0,
    false
    
    local function entity_collision(_fentity,_sentity)
      for _fhitbox in all(_fentity.body.hitboxes) do
        for _shitbox in all(_sentity.body.hitboxes) do
          if not _fhitbox.immaterial and not _shitbox.immaterial and 
          rect_intersect(_fentity.position.x+_fhitbox.x,_fentity.position.y+_fhitbox.y,_fhitbox.width,_fhitbox.height,_sentity.position.x+_shitbox.x,_sentity.position.y+_shitbox.y,_shitbox.width,_shitbox.height)
           then
            _fentity.body.collision(_fentity,_sentity)
            _sentity.body.collision(_sentity,_fentity)
            add(_fhitbox.collisions,{entity=_sentity,hitbox=_shitbox})
            add(_shitbox.collisions,{entity=_fentity,hitbox=_fhitbox})            
          end
        end
      end
    end
    
    local function exists_in_camera(_vec,_thresh)
      --TEST
      _thresh = _thresh or 0
      return _vec.x+_thresh >= game_camera.x and _vec.x <= game_camera.x+game_camera.width+_thresh and
              _vec.y+_thresh >= game_camera.y and _vec.y <= game_camera.y+game_camera.height+_thresh
    end
    
    local function collision_update(_entities)
      for i=1,#_entities do
        _entities[i].body:clear_collisions()
        for j=i+1,#_entities do
          if exists_in_camera(_entities[i].vector,32) and exists_in_camera(_entities[i].vector,32) then
            entity_collision(_entities[i],_entities[j])
          end
        end
      end
    end
    
    local function rectcast(_rect)
      local ret = {}
      for entity in all(entities) do
        for hitbox in all(entity.body.hitboxes) do
          if rect_intersect(_rect, new_rect(entity.position.x+hitbox.x,entity.position.y+hitbox.y,hitbox.width,hitbox.height)) then
            add(ret,entity)
          end
        end
      end
      return ret
    end 
    
    local function get_entities_on_camera(_thresh)
      local ret = {}
      _thresh = _thresh or 0
      for entity in all(entities) do
        if exists_in_camera(entity.position,_thresh) then
          add(ret,entity)
        end
      end
      return ret
    end
    --Entity API
    local function add_entity(_entity)
      if type(_entity) == "table" and _entity.name != nil then
        add(entities,_entity)
      end
    end
    local function remove_entity(_entity)
      del(entities,_entity)
    end
    local function empty_entities()
      for k,v in pairs(entities) do entities[k] = nil end
      entities = {}
    end
    local function locate_entity_name(_name)
      local ret = {}
      for entity in all(entities) do
        if entity.name == _name then
          add(ret,entity)
        end
      end
      return ret
    end
    local function locate_entity_tag(_tag)
      local ret = {}
      for entity in all(entities) do
        if exists(entity.tags,_tag) then
          add(ret,entity)
        end
      end
      return ret
    end
    local function get_entities()
      return entities
    end
    --Frame API
    local function update()
      --Update Scene
      active_scene.update()
      active_scene.frame += 1
      if settings.entities_active then
        --Detect Collision
        collision_update(entities)
        --Update Entities
        for entity in all(entities) do
          entity.update(entity)
          entity.frame += 1
        end 
      end
      frame += 1
    end
    local function draw ()
      cls()
      camera(-game_camera.x,-game_camera.y)
      active_scene.draw()
      
      local function z_indexed()
        --TEST
        local ret,z_ordered,z_low,z_high = {},{},0,0
        for entity in all(entities) do
          if entity.z < z_low then
            z_low = entity.z
          end
          if entity.z > z_high then
            z_high = entity.z
          end
          if z_ordered[entity.z] == nil then
            z_ordered[entity.z] = {}
          end
          add(z_ordered[entity.z],entity)
        end
        for i=z_low,z_high do
          for entity in all(z_ordered[i]) do
            add(ret,entity)
          end
        end
        return ret
      end
      for entity in all(z_indexed()) do
        entity.draw(entity)
        if settings.show_hitboxes == true then
          entity.body:draw(entity)
        end
      end
    end
    return {
            get_frame = function()
              return frame
            end,
            start = function()
              if started == false then
                printh("Starting Game")
                active_scene.starting()
                started = true
              end
            end,
            update=update,
            draw=draw,
            switch_scene=function(scene)
              active_scene.ending()
              active_scene = scene
              active_scene.starting()
            end,
            add_entity=add_entity,
            remove_entity=remove_entity,
            empty_entities=empty_entities,
            rectcast=rectcast,
            locate_entity_name=locate_entity_name,
            locate_entity_tag=locate_entity_tag,
            get_entities=get_entities,
            get_entities_on_camera=get_entities_on_camera,
            exists_in_camera=exists_in_camera,
            camera=game_camera,
            active_scene=active_scene,
            pause = function() 
              settings.entities_active = false
            end,
            unpause = function()
              settings.entities_active = true
            end
            }
end

entity_table = {}
entity_table.baddy = 
function(_x,_y)
  local sprite = new_sprite(4,0,0,2,2,false,false)
  local end_point = new_vector(_x+50,_y+10)
  local position = new_vector(_x,_y)
  local co = Vector.Coroutines.MoveToInFrames(position,end_point,60)
  local anim = new_animation(new_clip("0,1,1,1,1,1,1|2,1,1,1,1,1,1|32,1,1,1,1,1,1/10,-10,5,5|15,-15,5,5|10,-10,5,5/",20),sprite,hitbox,position,true)
  return new_entity("baddy",
        {"enemy"},
        position,
        function (entity)
          coresume(anim,true)
          printh(costatus(anim))
          entity.position:ToWhole()
        end,
        function (entity)
          sprite:draw(entity)
        end,
        new_body({new_hitbox(0,8,16,8),hitbox}, 
        function (entity,coll)
        end),
        {}
        ) 
  end
        
--scenes
scene_table = {}
scene_table.init = 
function ()
  return new_scene(function ()
                    game.add_entity(entity_table.baddy(32,32,new_vector(64,64),true))
                  end,
                  nil,
                  function ()
                  end,
                  nil,
                  nil)
end

extensions = {}
--pico
function _init()
  --Initialize Three Global objects
  --data: object which contains entity, scene, and starting_scene.
  --extensions: object which contains singular services to be called on
  --new_game: object which operates the game
  game = new_game(scene_table.init())
  game.start()
end
function _update60()
  game.update()
end
function _draw()
  game.draw()
end

__gfx__
0000000000000000eeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007ee7e7ee7ee7e7ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0006660000666000ee77e7eeee77e7ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600006666007777e7777777e777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666060060666007777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06660606606066607777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0660606dd60606607ccc77cc7ccc77cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0660606dd6060660cccccccccccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060660606060eeeeeeeeeeeeeeee008888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000
06060606606060607ee7e7ee7ee7e7ee080080800000000800000000000000000000000000000000000000000000000000000000000000000000000000000000
0660606006060660ee77e7eeee77e7ee800000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000
06660600006066607777e7777777e777800800800000000800000000000000000000000000000000000000000000000000000000000000000000000000000000
06666000000666607777777777777777080088000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000
06666600006666607777777777777777008888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600006666007ccc77cc7ccc77cc000800800008080000000000000000000000000000000000000000000000000000000000000000000000000000000000
0006660000666000cccccccccccccccc008008000080008000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007000007000000000700000700000000070000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007000007000000000700000700000000070000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005720275000000000572027500000000057202750000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000222220000000000022222000000000002222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000200020000000000020002000000000002000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000220220000000000022022000000000002202200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00022000002200000002200000220000000220000022000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00200220220020000020022022002000002002202200200000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020202020200000002020202020000000202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000220220000000000022022000000000002202200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000200020000000000020002000000000002000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000022200000000000002222000000000000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000200020000000000002002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000200020000000000020220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002200022000000000002022000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344

