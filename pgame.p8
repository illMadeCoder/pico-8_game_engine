pico-8 cartridge // http://www.pico-8.com
version 14
__lua__
--[[
  a pico-8 game engine

  mission:
  provide a unit tested framework to lift the development process to the game development problem domain.

  developed by  :   jesse bergerstock
  email         :   illmadecoder@gmail.com
  website       :   http://illmadecoder.com
  github        :   https://github.com/illmadecoder/pico-8_game_engine
]]--

--[[
	section header
	1. pico-8 constants & enums
]]--

enum_buttons = {
  left =  0,
  right = 1,
  up =    2,
  down =  3,
  z =     4,
  x =     5
}

enum_colors = {
  black =       0,
  dark_blue =   1,
  dark_purple = 2,
  dark_green =  3,
  brown =       4,
  dark_gray =   5,
  light_gray =  6,
  white =       7,
  red =         8,
  orange =      9,
  yellow =      10,
  green =       11,
  blue =        12,
  indigo =      13,
  pink =        14,
  peach =       15
}

--[[
	section header
	2. global helper routines
]]--

--[[
  subsection header
  2.1 a zero function
]]--

function empty()
end

--[[
  subsection header
  2.2 maths
]]--

function ceil(_x)
  return -flr(-_x)
end

function sign(_x)
  return _x > 0
          and 1
          or _x < 0
          and -1
          or 0
end

function round(_x)
  if _x % 1 == 0 then
    return _x
  elseif abs(_x) % 1 >= .5 then
    return sign(_x) == 1 and ceil(_x) or flr(_x)
  else
    return sign(_x) == 1 and flr(_x) or ceil(_x)
  end
end

function in_range(_x, _min, _max)
  return _x >= _min and _x <= _max
end

function clamp(_x, _min, _max)
  return _x <= _min
          and _min
          or _x >= _max
          and _max
          or _x
end

function normalize(_x, _min, _max)
  return clamp((_x - _min)/(_max - _min), 0, 1)
end

function approx(_a, _b, _thresh)
  return in_range(abs(_a - _b), 0, _thresh)
end

function lerp(_percent, _min, _max)
  return clamp((_max - _min) * _percent + _min, _min, _max)
end

--[[
  subsection header
  2.3 strings
]]--

function split(_string, _split)
  if #_string == 0 then
    return {}
  end
  
  local ret = {}
  local cur = ""

  for i = 1, #_string do
    local char = sub(_string, i, i)
    if char == _split then
      add(ret, cur)
      cur = ""
    else
      cur = cur .. char
    end
  end
  
  add(ret, cur)

  return ret
end

function cut(_string, _cut)
  local ret = ""
  local split = split(_string, _cut)

  for i = 1, #split do
    ret = ret .. split[i]
  end

  return ret
end

function string_to_number(_string)
  if #_string == 0 then
    return 0
  elseif sub(_string, 1, 1) == '-' then
    return sub(_string, 2, #_string)*-1
  else
    return _string+0
  end
end

function string_to_boolean(_string)
  return _string == "true" and true or false
end

--[[
  subsection header
  2.4 tables
]]--

function stringify_table(_table, _tab)
  local function num_to_tab(_num)
    local ret = ""
    for i = 1, _num do
      ret = ret .. "    "
    end
    return ret
  end

  _table = _table or {}
  _tab = _tab or 0
  local ret = " \n" .. num_to_tab(_tab) .. "{ \n"

  for k, v in pairs(_table) do
    if type(v) == "function" then
      ret = ret .. num_to_tab(_tab) .. k .. " = " .. k .. "()" .. ' \n'
    elseif type(v) == "table" then
      ret = ret .. num_to_tab(_tab) .. k .. " = " .. stringify_table(v, _tab + 1) .. ' \n'
    else
      ret = ret .. num_to_tab(_tab) .. k .. " = " .. tostr(v) .. ' \n'
    end
  end

  return ret .. num_to_tab(_tab) .. "} \n"
end

function exists(_search, _table)
  for k, v in pairs(_table) do
    if v == _search then
      return true
    end
  end

  return false
end

function equal_tables(_a, _b)
  for k, v in pairs(_a) do
    if _b[k] != v then
      return false
    end
  end

  for k, v in pairs(_b) do
    if _a[k] != v then
      return false
    end
  end

  return true
end

function deep_copy(_table)
  local ret = {}

  for k, v in pairs(_table) do
    if type(_table[k]) != "table" then
      ret[k] = _table[k]
    else
      ret[k] = deep_copy(_table[k])
    end
  end

  return ret
end

--[[
  subsection header
  2.5 drawing
]]--

function print_center(_str, _x, _y, _col)
  print(_str, _x + ((4 - #_str * 4)/2), _y, _col)
end

--[[
  subsection header
  2.6 functional
]]--

function f_map(_func, _collection)
  local mapped_collection = {}

  for item in all(_collection) do
    add(mapped_collection, _func(item))
  end

  return mapped_collection
end

--[[
	section header
	3. data types
]]--

--[[
  subsection header
  3.1 vector
]]--

--[[
  type setup
]]--

_g_vector = {}
_g_vector.metatable = {}
function _g_vector.metatable.__index(_table, _key)
  return _g_vector.metatable[_key]
end

--[[
  constructors
]]--

function _g_vector.new(_x, _y)
  return setmetatable({x = _x, y = _y}, _g_vector.metatable)
end

function _g_vector.from_string(_string)
  local read_arguments = f_map(string_to_number, split(_string, ','))
  return _g_vector.new(read_arguments[1], read_arguments[2])
end

function _g_vector.from_copy(_vector)
  return _g_vector.new(_vector.x, _vector.y)
end

function _g_vector.scalar_multiply(_vector, _scalar)
  return _g_vector.new(_vector.x * _scalar, _vector.y * _scalar)
end

function _g_vector.normalize(_vector)
  assert(_g_vector.magnitude(_vector) != 0, "cannot normalize 0 vector")
  return _g_vector.new(_vector.x/_g_vector.magnitude(_vector), _vector.y/_g_vector.magnitude(_vector))
end

function _g_vector.scale(_vector_a, _vector_b)
  return _g_vector.new(_vector_a.x * _vector_b.x, _vector_a.y * _vector_b.y)
end

function _g_vector.inverse(_vector)
  return _g_vector.scalar_multiply(_vector, -1)
end

--[[
    meta operations
--]]

function _g_vector.metatable.__add(_a, _b)
  return _g_vector.new(_a.x + _b.x, _a.y + _b.y)
end

function _g_vector.metatable.__sub(_a, _b)
  return _g_vector.new(_a.x - _b.x, _a.y - _b.y)
end

function _g_vector.metatable.__eq(_a, _b)
  return _a.x == _b.x and _a.y == _b.y
end

--[[
    methods of mutation
--]]

function _g_vector.metatable.set(_self, _x, _y)
  _self.x, _self.y = _x, _y
end

function _g_vector.metatable.set_to(_self, _other)
  _self:set(_other.x, _other.y)
end

function _g_vector.metatable.to_whole(_self)
  _self:set(round(_self.x), round(_self.y))
end

function _g_vector.metatable.lerp(_self, _t, _start, _end)
  _self:set(lerp(_t, _start.x, _end.x), lerp(_t, _start.y, _end.y))
end

function _g_vector.metatable.move_towards(_self, _to, _speed)
  if _g_vector.approx_equal(_self, _to, _speed) then
    _self:set_to(_to)
  else
    _self:set_to(_self + _g_vector.scalar_multiply(_g_vector.unit_towards(_self, _to), _speed))
  end
end

--[[
  helper functions
]]--

function _g_vector.dot(_a, _b)
  return _a.x * _b.x + _a.y * _b.y
end

function _g_vector.magnitude(_vector)
  return sqrt(_vector.x * _vector.x + _vector.y * _vector.y)
end

function _g_vector.unit_towards(_from, _to)
  if _g_vector.distance(_from, _to) == 0 then
    return _g_vector.from_copy(_g_vector.zero)
  else
    return _g_vector.normalize(_to - _from)
  end
end

function _g_vector.distance(_vector_a, _vector_b)
  return _g_vector.magnitude(_vector_a - _vector_b)
end

function _g_vector.approx_equal(_vector_a, _vector_b, _thresh)
  return in_range(abs(_g_vector.distance(_vector_a, _vector_b)), 0, _thresh)
end

--[[
  constants & enums
]]--

_g_vector.zero = _g_vector.new(0, 0)

_g_vector.up = _g_vector.new(0, -1)
_g_vector.down = _g_vector.new(0, 1)
_g_vector.left = _g_vector.new(-1, 0)
_g_vector.right = _g_vector.new(1, 0)

--[[
  subsection header
  3.2 rect
]]--

--[[
  type setup
--]]

_g_rect = {}
_g_rect.metatable = {}
function _g_rect.metatable.__index(_table, _key)
  return _g_rect.metatable[_key]
end

--[[
  constructors
]]--

function _g_rect.new(_position, _width, _height)
  return setmetatable({
                        position = _position,
                        width = _width,
                        height = _height
                      },
                      _g_rect.metatable)
end

function _g_rect.from_string(_string)
  local read_arguments = f_map(string_to_number, split(_string, ','))
  return _g_rect.new(_g_vector.new(read_arguments[1], read_arguments[2]), read_arguments[3], read_arguments[4])
end


--[[
  meta operations
]]--

function _g_rect.metatable.__add(_rect_a, _rect_b)
  return _g_rect.new(_rect_a.position + _rect_b.position, _rect_a.width + _rect_b.width, _rect_a.height + _rect_b.height)
end

function _g_rect.metatable.__sub(_rect_a, _rect_b)
  return _g_rect.new(_rect_a.position - _rect_b.position, _rect_a.width -_rect_b.width, _rect_a.height -_rect_b.height)
end

--[[
    methods of mutation
--]]

function _g_rect.metatable.draw(_rect, _color, _is_fill)
  if _is_fill then
    rectfill(_rect.position.x, _rect.position.y, _rect.position.x + _rect.width, _rect.position.y + _rect.height, _color)
  else
    rect(_rect.position.x, _rect.position.y, _rect.position.x + _rect.width, _rect.position.y + _rect.height, _color)
  end
end

--[[
  helper functions
]]--

function _g_rect.center(_rect)
  return _g_vector.new(_rect.position.x + _rect.width/2, _rect.position.y + _rect.height/2)
end

function _g_rect.x_max(_rect)
  return max(_rect.position.x, _rect.position.x + _rect.width)
end

function _g_rect.x_min(_rect)
  return min(_rect.position.x, _rect.position.x + _rect.width)
end

function _g_rect.y_max(_rect)
  return max(_rect.position.y, _rect.position.y + _rect.height)
end

function _g_rect.y_min(_rect)
  return min(_rect.position.y, _rect.position.y + _rect.height)
end

function _g_rect.get_corners(_rect)
  local x_max, x_min, y_max, y_min = _g_rect.x_max(_rect), _g_rect.x_min(_rect), _g_rect.y_max(_rect), _g_rect.y_min(_rect)
  return {
            _g_vector.new(x_min, y_min),
            _g_vector.new(x_min, y_max),
            _g_vector.new(x_max, y_min),
            _g_vector.new(x_max, y_max)
         }
end

function _g_rect.contains(_rect, _vector)
  return _vector.x >= _g_rect.x_min(_rect) and
         _vector.x <= _g_rect.x_max(_rect) and
         _vector.y >= _g_rect.y_min(_rect) and
         _vector.y <= _g_rect.y_max(_rect)
end

function _g_rect.overlaps(_rect_a, _rect_b)
  local _rect_b_corners = _g_rect.get_corners(_rect_b)

  for corner in all(_rect_b_corners) do
    if _g_rect.contains(_rect_a, corner) then
      return true
    end
  end

  return false
end

--[[
  constants & enums
]]--

_g_rect.zero = _g_rect.new(_g_vector.zero, 0, 0)
_g_rect.unit = _g_rect.new(_g_vector.zero, 1, 1)

--[[
  subsection header
  3.3 sprite
]]--

--[[
  type setup
--]]

_g_sprite = {}
_g_sprite.metatable = {}
function _g_sprite.metatable.__index(_table, _key)
  return _g_sprite.metatable[_key]
end

--[[
  constructors
]]--

function _g_sprite.new(_n, _rect, _flipx, _flipy)
  return setmetatable({
      n = _n,
      rect = _rect,
      flipx = _flipx or false,
      flipy = _flipy or false
    }, _g_sprite.metatable)
end

function _g_sprite.from_string(_string)
  local parse_arguments = function(_string)
    if _string == "true" or _string == "false" then
      return string_to_boolean(_string)
    else
      return string_to_number(_string)
    end
  end

  local read_arguments = f_map(parse_arguments, split(_string, ','))

  return _g_sprite.new(read_arguments[1], _g_rect.new(_g_vector.new(read_arguments[2], read_arguments[3]), read_arguments[4], read_arguments[5]), read_arguments[6], read_arguments[7])
end

--[[
  helper functions
]]--

function _g_sprite.get_global_position(_sprite, _entity)
  return _sprite.rect.position + _entity.position
end

function _g_sprite.metatable.draw(_sprite, _entity)
  local global_position = _g_sprite.get_global_position(_sprite, _entity)
  spr(_sprite.n,
      global_position.x,
      global_position.y,
      _sprite.rect.width/_g_sprite.unit_sprite_size,
      _sprite.rect.height/_g_sprite.unit_sprite_size,
      _sprite.flipx,
      _sprite.flipy)
end

--[[
  constants and enums
]]

_g_sprite.unit_sprite_size = 8

--[[
  subsection header
  3.4 hitbox
]]--

--[[
  type setup
--]]

_g_hitbox = {}
_g_hitbox.metatable = {}
function _g_hitbox.metatable.__index(_table, _key)
  return _g_hitbox.metatable[_key]
end

--[[
  constructors
]]--

function _g_hitbox.new(_name, _tags, _rect, _enabled)
  return setmetatable({
    name = _name or "hitbox",
    tags = _tags or {},
    rect = _rect or _g_rect.new(_g_vector.new(0, 0), 0, 0),
    enabled = _enabled or true,
    collisions = {}
  },
  _g_hitbox.metatable)
end

--[[
  methods of mutation
--]]

function _g_hitbox.metatable.draw(_hitbox, _entity)
  _g_hitbox.get_global_rect(_hitbox, _entity):draw(enum_colors.green)
end

--[[
  helper functions
]]--

function _g_hitbox.get_global_position(_hitbox, _entity)
  return _hitbox.rect.position + _entity.position
end

function _g_hitbox.get_global_rect(_hitbox, _entity)
  return _g_rect.new(_g_hitbox.get_global_position(_hitbox, _entity), _hitbox.rect.width, _hitbox.rect.height)
end

--[[
  subsection header
  3.5 body
]]--

--[[
  type setup
--]]

_g_body = {}
_g_body.metatable = {}
function _g_body.metatable.__index(_table, _key)
  return _g_body.metatable[_key]
end

--[[
  constructors
]]--

function _g_body.new(_hitboxes, _collision_callback)
  return setmetatable({
                      hitboxes = _hitboxes or {},
                      collision_callback = _collision_callback or empty
                      },
                    _g_body.metatable)
end

--[[
  methods of mutation
--]]

function _g_body.metatable.draw(_self, _entity)
  for hitbox in all(_self.hitboxes) do
    hitbox:draw(_entity)
  end
end

function _g_body.metatable.clear_collisions(_self)
  for hitbox in all(_self.hitboxes) do
    hitbox.collisions = {}
  end
end

function _g_body.metatable.collision_event(_self, _self_hitbox, _other_hitbox, _other)
  add(_self_hitbox.collisions, _other)
  _self:collision_callback(_other, _self_hitbox, _other_hitbox)
end

--[[
  helper functions
]]--
function _g_body.locate_hitboxes(_body, _name)
  local ret = {}
  for hitbox in all(_body.hitboxes) do
    if hitbox.name == _name then
      add(ret, hitbox)
    end
  end
  return ret
end

function _g_body.get_collisions(_body)
  local ret = {}
  
  for hitbox in all(_body.hitboxes) do
    for collision in all(hitbox.collisions) do
      add(ret, collision)
    end
  end
  
  return ret
end

--[[
  subsection header
  3.6 graphic
]]--

--[[
  type setup
--]]

_g_graphic = {}
_g_graphic.metatable = {}
function _g_graphic.metatable.__index(_table, _key)
  return _g_graphic.metatable[_key]
end

--[[
  constructors
]]--

function _g_graphic.new(_sprites, _enabled)
  return setmetatable({
                        sprites = _sprites or {},
                        enabled = _enabled or true
                      },
                    _g_graphic.metatable)
end

--[[
  methods of mutation
]]--

function _g_graphic.metatable.draw(_self, _entity)
  for sprite in all(_self.sprites) do
    sprite:draw(_entity)
  end
end

--[[
  subsection header
  3.6 animation
]]--

--[[
  subsection header
  3.7 particle_effect
]]--

--[[
  subsection header
  3.8 entity
]]--

_g_entity = {}

function _g_entity.new(_name, _tags, _position, _update, _draw, _body, _graphic, _z, _active)
  return {
          name = _name or "entity",
          tags = _tags or {},
          position = _position or _g_vector.new(),
          update = _update or empty,
          draw = _draw or empty,
          body = _body or _g_body.new(),
          graphic = _graphic or _g_graphic.new(),
          z = _z or 0,
          frame = 0,
          active = _active or true
        }
end

--[[
  subsection header
  3.9 scene
]]--

_g_scene = {}
function _g_scene.new(_starting, _ending, _update, _late_update, _draw, _late_draw)
  return {
        starting = _starting or empty,
        ending = _ending or empty,
        update = _update or empty,
        late_update = _late_update or empty,
        draw = _draw or empty,
        late_draw = _late_draw or empty,
        frame = 0,
        draw_frame = 0
      }
end

--[[
  section header
  4. modules
]]--

--[[
  subsection header
  4.1 entity_controller
]]

entity_controller = {
  entities_z_indexed = {},
}

--[[
entity_controller
]]

function entity_controller.empty(_z_slots)
  entity_controller.entities_z_indexed = {}
end

function entity_controller.insert_entity(_entity)
  if _entity.z > #entity_controller.entities_z_indexed then
    for i = #entity_controller.entities_z_indexed+1, _entity.z do
      entity_controller.entities_z_indexed[i] = {}
    end
  end
      
  add(entity_controller.entities_z_indexed[_entity.z], _entity)
end

function entity_controller.remove_entity(_entity)
  del(entity_controller.entities_z_indexed[_entity.z], _entity)
end

function entity_controller.get_entities()
  local iterable = {}
  for entities in all(entity_controller.entities_z_indexed) do
    for entity in all(entities) do
      add(iterable, entity)
    end
  end
  return iterable
end

function entity_controller.locate_entities_tag(_tag)
  local ret = {}
  local entities = entity_controller.get_entities()
  for entity in all(entities) do
    if exists(_tag, entity.tags) then
      add(ret, entity)
    end
  end
  return ret
end

function entity_controller.locate_entities_name(_name)
  local ret = {}
  local entities = entity_controller.get_entities()
  for entity in all(entities) do
    if entity.name == _name then
      add(ret, entity)
    end
  end
  return ret
end

--[[
  subsection header
  4.2 entity_physics
]]

entity_physics = {}

function entity_physics.entity_intersect(_entity_a, _entity_b)
  for hitbox_a in all(_entity_a.body.hitboxes) do
    for hitbox_b in all(_entity_b.body.hitboxes) do
      if hitbox_a.enabled and hitbox_b.enabled and 
      _g_rect.overlaps(_g_hitbox.get_global_rect(hitbox_a, _entity_a), _g_hitbox.get_global_rect(hitbox_b, _entity_b)) then
        _entity_a.body:collision_event(hitbox_a, hitbox_b, _entity_b)
        _entity_b.body:collision_event(hitbox_b, hitbox_a, _entity_a)
      end
    end
  end
end

function entity_physics.rectcast(_rectcast)
  local collisions = {}
  
  for entity in all(entity_controller.get_entities()) do
    for hitbox in all(entity.body.hitboxes) do
      if _g_rect.overlaps(_rectcast, _g_hitbox.get_global_rect(hitbox, entity)) then
        add(collisions, entity)
      end
    end
  end
  
  return collisions
end

function entity_physics.update()
  local entities = entity_controller.get_entities()
  for i = 1, #entities - 1 do
    entities[i].body:clear_collisions()
    for j = i + 1, #entities do
      entity_physics.entity_intersect(entities[i], entities[j])
    end
  end
end

--[[
  subsection header
  4.3 mouse_controller
]]

mouse_controller = {
  initialize = function ()
    poke(0x5f2d,1)
  end,
  get_x_coordinate = function ()
    return stat(32)
  end,
  get_y_coordinate = function ()
    return stat(33)
  end,
  get_left_down = function ()
    return stat(34) == 1
  end,
  get_right_down = function ()
    return stat(34) == 2
  end,
  get_middle_down = function ()
    return stat(34) == 4
  end,
}

--[[
  subsection header
  4.5 game_automata
]]

game_automata = {
  entity_prefabs = {},
  scene_prefabs = {},
  active_scene = nil
}

function game_automata.update()
  if game_automata.active_scene == nil then
    game_automata.active_scene = game_automata.scene_prefabs.initial()
  end
  game_automata.active_scene:update()
end

function game_automata.late_update()
  game_automata.active_scene:late_update()
  game_automata.active_scene.frame += 1
end

function game_automata.draw()
  game_automata.active_scene:draw()
  game_automata.active_scene.draw_frame += 1
end

function game_automata.late_draw()
  game_automata.active_scene:late_draw()
end

function game_automata.transition_scene(_to_scene)
  game_automata.active_scene:ending()
  game_automata.active_scene = _to_scene
  game_automata.active_scene:starting()
end

--[[
  subsection header
  4.6 entity_game_engine
]]

entity_game_engine = {
                        camera = _g_rect.new(_g_vector.new(0, 0), 127, 127),
                        debug_hitboxes = false,
                        pause = false,
                        sample_rate = 1,
                        frame = 0,
                        frames_drawn = 0
                      }

function entity_game_engine.update()
  local entities = entity_controller.get_entities()

  game_automata:update()

  if entity_game_engine.frame % entity_game_engine.sample_rate == 0 then
    if not entity_game_engine.pause then
      entity_physics:update(entities)

      for entity in all(entities) do
        entity:update()
      end
    end

    game_automata:late_update()
  end

  game_automata:late_update()
  entity_game_engine.frame += 1
end

function entity_game_engine.draw()
  local entities = entity_controller:get_entities()

  if entity_game_engine.frame % entity_game_engine.sample_rate == 0 then
    cls()
    camera(entity_game_engine.camera.position.x, entity_game_engine.camera.position.y)
    game_automata:draw()

    for entity in all(entities) do
      entity:draw()
      if entity_game_engine.draw_hitboxes then
        entity.body:draw(entity, _self)
      end
    end
    
    game_automata:late_draw()
    entity_game_engine.frames_drawn += 1
  end
end

--[[
  section header
  5. pico-8 events
    5.1 _init()
    5.2 _update()
    5.3 _update60()
    5.4 _draw()
]]--

function _init()
end

function _update60()
  entity_game_engine:update()
end

function _draw()
  entity_game_engine:draw()
end

--[[
	section header
	6. punit
]]--

--[[
  Game Dev Space
]]

function game_automata.scene_prefabs.initial()
  return _g_scene.new()
end

__gfx__
88888888888888888888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8cccccc88cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8cccccc88cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8cccccc88cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8cccccc88cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8cccccc88cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8cccccc88cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888888cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008cccccccccccccc800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888888888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
